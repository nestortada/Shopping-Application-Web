// Firestore Rules for Favorites
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Custom function to validate JWT tokens or user email from request
    function isAuthenticated() {
      return request.auth != null || 
             request.resource.data.keys().hasAny(['userEmail']);
    }
    
    // Check if the user is trying to access their own data
    function isUserSpecificData() {
      return resource.data.userEmail == request.auth.token.email || 
             resource.data.userEmail == request.resource.data.userEmail;
    }
    
    // Favorites collection rules
    match /favorites/{favoriteId} {
      // Allow read only if the document belongs to the user by email
      allow read: if isAuthenticated() && isUserSpecificData();
      
      // Allow create if the user email in the document matches the authenticated user
      allow create: if isAuthenticated() && 
                      (request.resource.data.userEmail == request.auth.token.email || 
                       request.resource.data.userEmail == request.resource.data.userEmail);
      
      // Allow delete only if the document belongs to the user by email
      allow delete: if isAuthenticated() && isUserSpecificData();
      
      // Generally we add or remove favorites, not update them
      allow update: if false;
    }

    // Allow users to read product information
    match /{locationId}/{productId} {
      allow read: if true;
    }

    // Allow users to read location information
    match /locations/{locationId} {
      allow read: if true;
    }
    
    // Allow access to ratings
    match /ratings/{ratingId} {
      allow read: if true;
      allow create: if isAuthenticated();
    }
  }
}
